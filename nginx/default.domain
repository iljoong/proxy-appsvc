# proxy
server {
    listen 80; 
    listen [::]:80;

    server_name my.domain.com;

    # https redirect
    location / {
            return 301 https://$host$uri;
    }
}

server {
	listen 443 ssl;

    server_name my.domain.com;

    # set SSL bind
    ssl_certificate /etc/ssl/certs/my_domain.crt;
    ssl_certificate_key /etc/ssl/certs/my_domain.key;
    ssl_protocols TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    server_name my.domain.com;

	location / {
        proxy_pass http://rootweb.azurewebsites.net:80;
        proxy_redirect off;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host rootweb.azurewebsites.net;

        proxy_cookie_domain rootweb.azurewebsites.net $host;
    }

    # url path-based routing
    location /path {
                rewrite ^([^.]*[^/])$ $1/ permanent;
    }
	location /path/ {
		proxy_pass http://pathweb.azurewebsites.net:80;
		proxy_redirect off;

		rewrite /path(.*) /$1 break;

		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Host pathweb.azurewebsites.net;

		proxy_cookie_domain pathweb.azurewebsites.net $host;
	}

}
